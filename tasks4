#Spam SMS Detection (Task 4)

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
url = "https://raw.githubusercontent.com/justmarkham/scikit-learn-videos/master/data/sms.tsv"
data = pd.read_csv(url, sep='\t', header=None, names=['label', 'message'])
print("Dataset shape:", data.shape)
print(data.head())
data['label'] = data['label'].map({'ham': 0, 'spam': 1})
X_train, X_test, y_train, y_test = train_test_split(
    data['message'], data['label'], test_size=0.2, random_state=42
)vectorizer = TfidfVectorizer(stop_words='english')
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)
model = MultinomialNB()
model.fit(X_train_tfidf, y_train)
y_pred = model.predict(X_test_tfidf)
print("\nâœ… Accuracy:", accuracy_score(y_test, y_pred))
print("\nðŸ“Š Classification Report:\n", classification_report(y_test, y_pred))
print("\nðŸ”Ž Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
samples = [
    "Congratulations! You've won a free iPhone. Claim your prize now!",
    "Hi, are we still meeting for lunch tomorrow?"
]
sample_tfidf = vectorizer.transform(samples)
predictions = model.predict(sample_tfidf)

for msg, label in zip(samples, predictions):
    print(f"\nMessage: {msg}")
    print("Prediction:", "Spam" if label == 1 else "Ham (Not Spam)")
